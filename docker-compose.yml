version: '3.9'

services:
  backend:
    build:
      context: ./iot-locker
      dockerfile: Dockerfile
    container_name: iot_backend
    command: python main.py
    volumes:
      - ./iot-locker:/app
    env_file:
      - ./iot-locker/.env
    depends_on:
      db:
        condition: service_healthy
      mosquitto:
        condition: service_started
    networks:
      - iot_network
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: iot_frontend
    depends_on:
      - backend
    networks:
      - iot_network

  db:
    image: mysql:8.0
    container_name: iot_mysql
    restart: unless-stopped
    env_file:
      - ./iot-locker/.env
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - iot_network

  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"  # MQTT
      - "9001:9001"  # WebSocket
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      - iot_network

volumes:
  db_data:

networks:
  iot_network:
    driver: bridge
